import SwiftUI

struct Entity: Identifiable, Equatable {
    let id = UUID()
    let type: EntityState
}

enum EntityState {
    case aliveCell, deadCell, life, death
    
    var title: String {
        switch self {
        case .aliveCell:
            return "–ñ–∏–≤–∞—è"
        case .deadCell:
            return "–ú—ë—Ä—Ç–≤–∞—è"
        case .life:
            return "–ñ–∏–∑–Ω—å"
        case .death:
            return "–°–º–µ—Ä—Ç—å"
        }
    }
    
    var subtitle: String {
        switch self {
        case .aliveCell:
            return "–∏ —à–µ–≤–µ–ª–∏—Ç—Å—è!"
        case .deadCell:
            return "–∏–ª–∏ –ø—Ä–∏–∫–∏–¥—ã–≤–∞–µ—Ç—Å—è"
        case .life:
            return "–ö—É-–∫—É"
        case .death:
            return "–°–º–µ—Ä—Ç—å"
        }
    }
    
    var emoji: String {
            switch self {
            case .aliveCell:
                return "üí•"
            case .deadCell:
                return "üíÄ"
            case .life:
                return "üê£"
            case .death:
                return "‚ò†Ô∏è"
            }
        }
        
        var gradientColors: [Color] {
            switch self {
            case .aliveCell:
                return [Color.orange, Color.iconYellow]
            case .deadCell:
                return [Color.green, Color.iconGreen]
            case .life:
                return [Color.purple, Color.iconPink]
            case .death:
                return [Color.gray, Color.white]
            }
        }

}
